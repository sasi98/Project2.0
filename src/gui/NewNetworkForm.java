/*
 * NewNetworkForm.java
 *
 * Created on __DATE__, __TIME__
 */

package gui;

import java.awt.event.ActionEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;

import valueset.Value;
import architecture.NetworkManager;
import dataManager.PatronData;

/**
 * 
 * @author __USER__
 */
public class NewNetworkForm extends javax.swing.JFrame {

    private String idCompany;
    private BigDecimal cotaError;
    private double learningCnt;
    private int numNeuronES, numNeuronO, numPatrones, iteractionMax, inicio;
    private boolean bias;

    /** Creates new form NewNetworkForm */
    public NewNetworkForm() {
        initComponents();
    }

    /**
     * Setup ComboBox value
     * */
    public void setupComboBox() {

        comboBox_inputType.addItem(Value.ComboBox.SOLAPADOS);
        comboBox_inputType.addItem(Value.ComboBox.NOSOLAPADOS);
        comboBox_inputType.addItem(Value.ComboBox.ALEATORIOS);
        comboBox_inputType.addItem(Value.ComboBox.MANUAL);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    //GEN-BEGIN:initComponents
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        tfIdCompany = new javax.swing.JTextField();
        tfCotaError = new javax.swing.JTextField();
        tfNumNeuronES = new javax.swing.JTextField();
        tfCnsLearning = new javax.swing.JTextField();
        tfIteractionMax = new javax.swing.JTextField();
        tfInicio = new javax.swing.JTextField();
        tfNumNeuronO = new javax.swing.JTextField();

        sPatrones = new javax.swing.JSpinner();
        sPatrones.setValue(10);
        rbLineal = new javax.swing.JRadioButton();
        rbTangencial = new javax.swing.JRadioButton();
        cbBias = new javax.swing.JCheckBox();
        bCreateNN = new javax.swing.JButton();
        bCreateNN.setHorizontalAlignment(SwingConstants.LEFT);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Identificador empresa: ");

        jLabel2.setText("Factor de aprendizaje:");

        jLabel3.setText("N\u00BA de neuronas de entrada/salida:");

        jLabel4.setText("N\u00ba Patrones de aprendizaje: ");

        jLabel5.setText("Cota de error: ");

        jLabel6.setText("Funci\u00f3n: ");

        jLabel7.setText("N\u00ba M\u00e1ximo de iteracciones: ");

        jLabel8.setText("Inicio de los datos:");

        final JLabel jlabel9 = new JLabel("N\u00BA de neuronas ocultas");

        tfIdCompany.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                tfIdCompanyActionPerformed(evt);
            }
        });

        tfCotaError.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                tfCotaErrorActionPerformed(evt);
            }
        });

        tfNumNeuronES.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                tfNumNeuronESActionPerformed(evt);
            }
        });

        tfNumNeuronO.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                tfNumNeuronOActionPerformed(evt);
            }
        });

        tfCnsLearning.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                tfCnsLearningActionPerformed(evt);
            }
        });

        tfIteractionMax.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                tfIteractionMaxActionPerformed(evt);
            }
        });

        tfInicio.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                tfInicioActionPerformed(evt);
            }
        });

        rbLineal.setText("Lineal");

        rbTangencial.setText("Tangencial");

        cbBias.setText("Bias");
        cbBias.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                cbBiasActionPerformed(evt);
            }
        });

        bCreateNN.setText("Crear Red");
        bCreateNN.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                bCreateNNActionPerformed(evt);
            }
        });

        final JLabel lblNDeNeuronas = new JLabel("N\u00BA de neuronas ocultas");

        final JLabel lblSeleccinDeDatos = new JLabel("Selecci\u00F3n de datos: ");

        comboBox_inputType = new JComboBox();
        setupComboBox();
        final GroupLayout groupLayout = new GroupLayout(getContentPane());
        groupLayout.setHorizontalGroup(
                groupLayout.createParallelGroup(Alignment.LEADING)
                .addGroup(groupLayout.createSequentialGroup()
                        .addGap(150)
                        .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                .addGroup(groupLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(27)
                                        .addComponent(sPatrones, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE))
                                        .addGroup(groupLayout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(18)
                                                .addComponent(tfNumNeuronES, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE))
                                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING, false)
                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                .addComponent(lblNDeNeuronas)
                                                                .addGap(18)
                                                                .addComponent(tfNumNeuronO))
                                                                .addGroup(groupLayout.createSequentialGroup()
                                                                        .addComponent(jLabel2)
                                                                        .addGap(18)
                                                                        .addComponent(tfCnsLearning, GroupLayout.PREFERRED_SIZE, 114, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(ComponentPlacement.RELATED)))
                                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                                .addComponent(jLabel7)
                                                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                                                .addComponent(tfIteractionMax, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(groupLayout.createSequentialGroup()
                                                                                        .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
                                                                                                .addComponent(cbBias)
                                                                                                .addComponent(jLabel6))
                                                                                                .addGap(73)
                                                                                                .addComponent(rbLineal)
                                                                                                .addGap(26)
                                                                                                .addComponent(rbTangencial))
                                                                                                .addGroup(groupLayout.createSequentialGroup()
                                                                                                        .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                                                                                                .addGroup(groupLayout.createSequentialGroup()
                                                                                                                        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 128, GroupLayout.PREFERRED_SIZE)
                                                                                                                        .addGap(30)
                                                                                                                        .addComponent(tfIdCompany, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE))
                                                                                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                                                                                .addComponent(jLabel5)
                                                                                                                                .addGap(29)
                                                                                                                                .addComponent(tfCotaError, GroupLayout.PREFERRED_SIZE, 58, GroupLayout.PREFERRED_SIZE)))
                                                                                                                                .addGap(77)
                                                                                                                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                                                                                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                                                                                                .addComponent(jLabel8)
                                                                                                                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                                                                                                                .addComponent(tfInicio, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE))
                                                                                                                                                .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
                                                                                                                                                        .addComponent(bCreateNN)
                                                                                                                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                                                                                                                .addComponent(lblSeleccinDeDatos)
                                                                                                                                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                                                                                                                                .addComponent(comboBox_inputType, GroupLayout.PREFERRED_SIZE, 112, GroupLayout.PREFERRED_SIZE))))))
                                                                                                                                                                .addGap(57))
                );
        groupLayout.setVerticalGroup(
                groupLayout.createParallelGroup(Alignment.LEADING)
                .addGroup(groupLayout.createSequentialGroup()
                        .addGap(29)
                        .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                .addGroup(groupLayout.createSequentialGroup()
                                        .addGap(6)
                                        .addComponent(jLabel1))
                                        .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                .addComponent(tfIdCompany, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblSeleccinDeDatos)
                                                .addComponent(comboBox_inputType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                .addGap(7)
                                                                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                                        .addComponent(tfCotaError, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel5))
                                                                        .addGap(11)
                                                                        .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                                                                .addGroup(groupLayout.createSequentialGroup()
                                                                                        .addGap(3)
                                                                                        .addComponent(jLabel4))
                                                                                        .addComponent(sPatrones, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                                                                                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                                                                        .addComponent(tfInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                                                        .addComponent(jLabel8))))
                                                                                                        .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                                                                                                .addGroup(groupLayout.createSequentialGroup()
                                                                                                                        .addGap(3)
                                                                                                                        .addComponent(jLabel3))
                                                                                                                        .addComponent(tfNumNeuronES, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                                                                                        .addGap(18)
                                                                                                                        .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                                                                                                .addComponent(lblNDeNeuronas)
                                                                                                                                .addComponent(tfNumNeuronO, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                                                                                                .addGap(11)
                                                                                                                                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                                                                                                        .addComponent(jLabel2)
                                                                                                                                        .addComponent(tfCnsLearning, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                                                                                                        .addGap(12)
                                                                                                                                        .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                                                                                                                .addComponent(jLabel7)
                                                                                                                                                .addComponent(tfIteractionMax, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                                                                                                                .addGap(21)
                                                                                                                                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                                                                                                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                                                                                                                .addGap(4)
                                                                                                                                                                .addComponent(jLabel6))
                                                                                                                                                                .addComponent(rbLineal)
                                                                                                                                                                .addComponent(rbTangencial))
                                                                                                                                                                .addGap(18)
                                                                                                                                                                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                                                                                                                                        .addComponent(cbBias)
                                                                                                                                                                        .addComponent(bCreateNN))
                                                                                                                                                                        .addGap(28))
                );
        getContentPane().setLayout(groupLayout);

        pack();
    }// </editor-fold>
    //GEN-END:initComponents

    private void tfInicioActionPerformed(final java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void tfIteractionMaxActionPerformed(final java.awt.event.ActionEvent evt) {
        final String strIteractionMax = tfIteractionMax.getText();
        iteractionMax = Integer.parseInt(strIteractionMax);
    }

    private void tfIdCompanyActionPerformed(final ActionEvent evt) {
        idCompany = tfIdCompany.getText();
    }

    private void tfCotaErrorActionPerformed(final ActionEvent evt) {
        final String stCotaError = tfCotaError.getText();
        cotaError = new BigDecimal(stCotaError); //Manejar errores
    }

    private void tfNumNeuronESActionPerformed(final ActionEvent evt) {
        // TODO add your handling code here:
        final String stneuronSize = tfNumNeuronES.getText();
        numNeuronES = Integer.parseInt(stneuronSize);
    }

    private void tfNumNeuronOActionPerformed(final ActionEvent evt) {
        // TODO add your handling code here:
        final String stNumNeuronO = tfNumNeuronO.getText();
        numNeuronO = Integer.parseInt(stNumNeuronO);
    }

    private void tfCnsLearningActionPerformed(final ActionEvent evt) {
        final String stCnsLearning = tfCnsLearning.getText();
        learningCnt = Double.parseDouble(stCnsLearning);
    }

    private void cbBiasActionPerformed(final ActionEvent evt) {
        bias = cbBias.isSelected();
    }

    private void bCreateNNActionPerformed(final java.awt.event.ActionEvent evt) {

        System.out.print(tfIdCompany.getText());
        idCompany = tfIdCompany.getText();
        System.out.print("ide" + idCompany);

        //si id company no est�entre 0 o 500, y adem�s tiene q tener el formato "000"

        if ((idCompany == null) || (idCompany.equals(""))) {
            JOptionPane.showMessageDialog(this, "Error, el campo identificador de empresa est�vacio", "Campo requerido", JOptionPane.ERROR_MESSAGE);
        } else {

            final int auxInt = Integer.parseInt(idCompany);

            if (auxInt < 1) {
                System.out.print("Menor que ");//
            }

            if (auxInt > 510) {
                System.out.print("Mayor que ");//
            }

            //			if ( (idCompany.compareTo("1") == -1) || (idCompany.compareTo("510") < 0)){
            //				System.out.print("Se sale del rango");//Tb pilla si metes letras
            //			}
            //

            //Si no incluimos los dem�s campos, estos se a�adiran por defecto
            final String stCotaError = tfCotaError.getText();
            if ((stCotaError == null) || (stCotaError.equals(""))) {
                tfCotaError.setText("0.001");
                cotaError = new BigDecimal(0.001);
                cotaError.setScale(NetworkManager.PRECISION, RoundingMode.HALF_UP);

            } else {
                cotaError = new BigDecimal(stCotaError);
                cotaError.setScale(NetworkManager.PRECISION);
            }
            final String stneuronSize = tfNumNeuronES.getText();
            if ((stneuronSize == null) || (stneuronSize.equals(""))) {
                tfNumNeuronES.setText("10");
                numNeuronES = 10; //independientemente del bias

            } else {
                numNeuronES = Integer.parseInt(stneuronSize);
            }

            String stnumNeuronO = tfNumNeuronO.getText();
            if ((stnumNeuronO == null) || (stnumNeuronO.equals(""))) {
                numNeuronO = numNeuronES - (numNeuronES / 2);
                stnumNeuronO = String.valueOf(numNeuronO);
                tfNumNeuronO.setText(stnumNeuronO);

            } else {
                numNeuronO = Integer.parseInt(stnumNeuronO);
            }

            final String stCnsLearning = tfCnsLearning.getText();
            if ((stCnsLearning == null) || (stCnsLearning.equals(""))) {
                tfCnsLearning.setText("0.001");
                learningCnt = 0.001;

            } else {
                learningCnt = Double.parseDouble(stCnsLearning);
            }

            final String stItMax = tfIteractionMax.getText();
            if ((stItMax == null) || (stItMax.equals(""))) {
                tfIteractionMax.setText("1000");
                iteractionMax = 1000;

            } else {
                iteractionMax = Integer.parseInt(stItMax);
            }

            final String strInicio = tfInicio.getText();
            if ((strInicio == null) || (strInicio.equals(""))) {
                tfInicio.setText("1");
                inicio = 1;

            } else {
                inicio = Integer.parseInt(strInicio);
            }
            numPatrones = (int) sPatrones.getValue();

            bias = cbBias.isSelected();

            //			System.out.print("Creando NN con id empresa: " + idCompany
            //					+ " cota de error " + cotaError + " N: "
            //					+ numNeuronES + " factor de aprendizaje " + learningCnt
            //					+ " bias: " + bias + "numero de patrones " + numPatrones
            //					+ "m�ximo n�mero de iteraciones: " + iteractionMax
            //					+ "Inicio de los patrones: " + inicio);

        }

        //Creamos la red con todos los datos

        final PatronData manejador = new PatronData(idCompany);
        ArrayList<BigDecimal[]> inputs = new ArrayList<BigDecimal[]>();
        ArrayList<BigDecimal[]> desiredOutputs = new ArrayList<BigDecimal[]>();

        // solapados
        if (this.comboBox_inputType.getSelectedItem().equals(Value.ComboBox.SOLAPADOS)) {
            inputs = manejador.createSolapadoArrayRm(numPatrones, inicio, NetworkManager.CNT, numNeuronES);
            desiredOutputs = manejador.createSolapadoArrayRi(numPatrones, inicio, NetworkManager.CNT, numNeuronES);
        }

        //no solapados
        else if (this.comboBox_inputType.getSelectedItem().equals(Value.ComboBox.NOSOLAPADOS)) {
            inputs = manejador.createNoSolapadoArrayRm(numPatrones, inicio, NetworkManager.CNT, numNeuronES);
            desiredOutputs = manejador.createNoSolapadoArrayRi(numPatrones, inicio, NetworkManager.CNT, numNeuronES);
        }

        //aleatorios
        else if (this.comboBox_inputType.getSelectedItem().equals(Value.ComboBox.ALEATORIOS)) {

        }

        //manual
        else {
            //open a new JFrame
        }

        final NetworkManager ne = new NetworkManager(numPatrones, numNeuronES, numNeuronO, iteractionMax, cotaError, learningCnt, inputs,
                desiredOutputs);
        ne.training();

        //		try {
        //			excel = new ReadExcel();
        //			Company p = excel.readCompanyById(idCompany);
        //			Network n = Network.getInstance(p);
        //			n.setUpNetwork(cotaError, numPatrones, numNeuronES, learningCnt,
        //					bias, iteractionMax, inicio);
        //			n.training();
        //		} catch (BiffException | IOException e) {
        //			// TODO Auto-generated catch block
        //			e.printStackTrace();
        //		}

    }

    //GEN-END:initComponents

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(final String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new NewNetworkForm().setVisible(true);
            }
        });
    }

    //GEN-BEGIN:variables
    // Variables declaration - do not modify
    private javax.swing.JButton bCreateNN;
    private javax.swing.JCheckBox cbBias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton rbLineal;
    private javax.swing.JRadioButton rbTangencial;
    private javax.swing.JSpinner sPatrones;
    private javax.swing.JTextField tfCnsLearning;
    private javax.swing.JTextField tfCotaError;
    private javax.swing.JTextField tfIdCompany;
    private javax.swing.JTextField tfInicio;
    private javax.swing.JTextField tfIteractionMax;
    private javax.swing.JTextField tfNumNeuronES;
    private JTextField tfNumNeuronO;
    private JComboBox<String> comboBox_inputType;
}